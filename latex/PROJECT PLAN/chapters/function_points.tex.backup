In order to evaluate the cost of the project we have to identify 
the function points and estimate the complexity of each one.
To each point we assign a weight referring to this table:\\

\begin{tabular}{ | c | l | l | l |}
    \hline
     Function types & \multicolumn{3}{|c|}{Weight} \\\hline
       & Simple  & Medium & Complex \\ \hline
    External Input & 3 & 4 & 6   \\ \hline
    External Output & 4 & 5 & 7 \\ \hline
    External Inquiry & 3 & 4  & 6 \\ \hline
    Internal Logic File & 7 & 10 & 15 \\ \hline
    External Interface File & 5 & 7 & 10  \\ \hline
    \end{tabular}

\begin{itemize}
  \item [Internal Logic File]: users (guest, taxidriver and passenger), 
                               ride, sharedride, taxiqueue
  \item[External Interface File]: gps coordinates, map service
  \item[External Input]: login, logout, request, reserve, delete, reserve shared,
                         accept call, refuse call, report, taxi available,
                         taxi not available, change settings
  \item[External Output]: message (eta, no taxi message)
  \item[External Inquiry]: see profile, see active ride list
\end{itemize}


\section{Complexity and cost evaluation}
  \subsection{Internal Logic File}
  According to our previous specification (explained in the RASD and DD documents),
  users and ride have to store few informations, thus we can adopt the
  simple cost weight for those ones.
  On the other hand, sharedride and taxiqueue have to store a dynamic
  list, that require more attention, so we adopt a medium cost weight.
  \begin{equation}
   4*7 + 2*10 = 48 \text{ FPs}
  \end{equation}

  \subsection{External Interface File}
  The interactions with gps coordinates and the map service are very simple, 
  because we need to gather few information from them, so we adopt a simple weight for
  both of External Internal Files.
  \begin{equation}
   2*5 = 10 \text{ FPs}
  \end{equation}
  
  \subsection{External Input}
  Most of the external inputs are simple actions involving a few number of entities,
  therefore we can adopt a simple weight cost for all of them.
  request and change settings however are more complex, and thus require a medium weight cost.
  \begin{equation}
    10*3 + 2*4= 38 \text{ FPs}
  \end{equation}
  
  \subsection{External Output}
  Sending eta requires to access the map service that calculate, on its own,
  the appropriate value, so we adopt a simple cost weight for message.
  \begin{equation}
    2*4 = 8 \text{ FPs}
  \end{equation}
  
  \subsection{External Inquiry}
  The profile requires only to send some fields saved in the current user,
  while the active ride list requires to scan the ridehistory and check its status (active or not).
  Therefore, we adopt a simple cost weight for the former, and a medium cost weight for the latter.
  \begin{equation}
    1*3 + 1*4 = 7 \text{ FPs}
  \end{equation}
  
  \subsection{Overall}
  In summary we have $\text{FPs} = \sum_{i=1}^{5} \text{FP}i = 111 $
 