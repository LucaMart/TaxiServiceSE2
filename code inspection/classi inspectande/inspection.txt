1: All class names, interface names, method names, class variables, method variables,
 and constants used should have meaningful names and do what the name suggests.

Class names are nouns, in mixed case, with the first letter of each word in
 capitalized. Examples: class Raster; class ImageSprite--> OK

Constants are declared using all uppercase with words separated by an 
underscore. Examples: MIN_WIDTH; MAX_HEIGHT;--> OK

9: No tabs are used to indent

12: Blank lines and optional comments are used to separate sections (beginning comments,
 package/import statements, class/interface declarations 
which include class variable/attributes declarations, constructors, and methods).
--> riga bianca tra gli import?

13: Where practical, line length does not exceed 80 characters.--> REPORT MASS ABUSE

17: A new statement is aligned with the beginning of the expression at 
the same level as the previous line.--> report line 142

20:Each Java source file contains a single public class or interface.--> OK
 
21: The public class is the first class or interface in the file.-->OK

24:If any package statements are needed, they should be the
 first non-comment statements. Import statements follow.-->OK

25:The class or interface declarations shall be in the following order:
A. class/interface documentation comment
B. class or interface statement
C. class/interface implementation comment, if necessary
D. class (static) variables
a. first public class variables
b. next protected class variables
c. next package level (no access modifier)
d. last private class variables
E. instance variables
a. first public instance variables
e. next protected instance variables
f. next package level (no access modifier)
g. last private instance variables
F. constructors
G. methods

26:Methods are grouped by functionality rather than by scope or accessibility.

28: Check that variables and class members are of the correct type.
 Check that they have the right visibility (public/private/protected)

29:Check that variables are declared in the proper scope

38:Check that all array (or other collection) indexes have been prevented from going out-of-bounds--> No Array or collection

Check that all objects (including Strings) are compared with "equals" and not with "=="--> OK

41:Check that displayed output is free of spelling and grammatical errors--> mystical language

Check that integer arithmetic, especially division, are used
 appropriately to avoid causing unexpected truncation/rounding--> no operations

In a switch statement, check that all cases are addressed by break or return--> no switch

59:Check that EOF conditions are detected and handled correctly--> no file